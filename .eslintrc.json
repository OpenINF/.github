{
  "root": true,
  "env": {
    "node": true,
    "browser": true
  },
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "babelOptions": {
      "configFile": "./babel.config.json"
    },
    "ecmaFeatures": {
      "globalReturn": false,
      "jsx": false
    },
    "project": ["./tsconfig.eslint.json"],
    "sourceType": "module"
  },
  "plugins": [
    "json-schema-validator",
    "unicorn",
    "import",
    "wix-editor",
    "prettier",
    "simple-import-sort",
    "promise"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:unicorn/recommended",
    "plugin:import/warnings",
    "plugin:regexp/recommended",
    "plugin:promise/recommended",
    "plugin:json-schema-validator/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "consistent-return": [1, { "treatUndefinedAsUnspecified": true }],
    "quotes": [
      1,
      "single",
      { "allowTemplateLiterals": true, "avoidEscape": true }
    ],
    "semi": [1, "always"],
    "max-lines": [1, { "max": 300 }],
    "max-params": [1, { "max": 5 }],
    "no-unneeded-ternary": [1],
    "wix-editor/no-instanceof-array": 1,
    "wix-editor/no-not-not": 1,
    "wix-editor/no-unneeded-match": 1,
    "wix-editor/prefer-filter": 1,
    "wix-editor/prefer-ternary": 1,
    "wix-editor/return-boolean": 1,
    "wix-editor/simplify-boolean-expression": 1,
    "unicorn/prefer-spread": 0,
    "unicorn/catch-error-name": 0,
    "unicorn/prefer-node-protocol": 0,
    "unicorn/prevent-abbreviations": [
      1,
      {
        "replacements": {
          "args": false,
          "err": false,
          "prod": false,
          "ref": false,
          "params": false
        }
      }
    ],
    "import/max-dependencies": [1, { "max": 15 }],
    "simple-import-sort/imports": 1,
    "simple-import-sort/exports": 1,
    "sort-imports": 0,
    "import/first": 1,
    "import/newline-after-import": 1,
    "import/no-duplicates": 1
  },
  "reportUnusedDisableDirectives": true,
  "overrides": [
    // Glob patterns in overrides use minimatch syntax.
    {
      "files": ["src/**/**.?(c|m)+(t|j)s"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["./tsconfig.eslint.json"],
        "warnOnUnsupportedTypeScriptVersion": false
      },
      "plugins": [
        "@typescript-eslint",
        "unicorn",
        "import",
        "wix-editor",
        "prettier",
        "simple-import-sort",
        "promise"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict",
        "plugin:unicorn/recommended",
        "plugin:import/warnings",
        "plugin:regexp/recommended",
        "plugin:promise/recommended",
        "plugin:prettier/recommended"
      ],
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "directory": "./src"
          },
          "node": {
            "extensions": [".ts", ".cts", ".mts", ".d.ts", ".d.cts", ".d.mts"]
          }
        },
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts",
            ".cts",
            ".mts",
            ".d.ts",
            ".d.cts",
            ".d.mts"
          ]
        }
      }
    },
    {
      "files": ["build/tasks/**.mjs"],
      "parser": "@babel/eslint-parser",
      "parserOptions": {
        "babelOptions": {
          "configFile": "./babel.config.json"
        },
        "ecmaFeatures": {
          "globalReturn": false
        },
        "ecmaVersion": 2022,
        "sourceType": "module"
      },
      "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:prettier/recommended"
      ]
    },
    {
      "files": ["**/**.json?(5|c)", "**.json?(5|c)", ".*.json?(5|c)", "OWNERS"],
      "parser": "jsonc-eslint-parser",
      "parserOptions": {
        "allowComments": true,
        "allowTrailingComma": true
      },
      "plugins": ["jsonc", "json-schema-validator"],
      "extends": [
        "plugin:jsonc/base",
        "plugin:jsonc/recommended-with-json",
        "plugin:jsonc/recommended-with-jsonc",
        "plugin:jsonc/recommended-with-json5",
        "plugin:json-schema-validator/recommended",
        "plugin:jsonc/prettier"
      ],
      "rules": {
        "jsonc/no-comments": 0,
        "jsonc/comma-dangle": 0,
        "jsonc/auto": 1
      }
    },
    {
      "files": ["package.json", ".ecrc.json"],
      "parser": "jsonc-eslint-parser",
      "parserOptions": {
        "allowComments": true,
        "allowTrailingComma": true
      },
      "plugins": ["jsonc", "json-schema-validator"],
      "extends": [
        "plugin:jsonc/base",
        "plugin:jsonc/recommended-with-json",
        "plugin:json-schema-validator/recommended",
        "plugin:jsonc/prettier"
      ],
      "rules": {
        "jsonc/no-comments": 2,
        "jsonc/comma-dangle": [2, "never"]
      }
    },
    {
      "files": ["**.md"],
      "plugins": ["markdown"],
      "extends": ["plugin:markdown/recommended"]
    },
    {
      "files": ["**.t?(o)ml", "**/*.t?(o)ml"],
      "parser": "toml-eslint-parser"
    },
    {
      "files": [".github/**/*.yml", "*.y?(a)ml", "**/*.y?(a)ml"],
      "parser": "yaml-eslint-parser",
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "case": "kebabCase",
            "ignore": ["^FUNDING\\.yml$"]
          }
        ]
      }
    }
  ]
}
