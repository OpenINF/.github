{
  // See https://code.visualstudio.com/docs/getstarted/settings
  // for the documentation about the extensions.json format.

  // TODO: Maybe ensure fish shell is installed on the WSL as well as container?
  // "task.allowAutomaticTasks": "on",

  // Editor
  //////////////////////////////////////////////////////////////////////////////

  "editor.experimental.pasteActions.enabled": true,
  "editor.stickyScroll.enabled": false,
  "editor.codeLens": true,
  "eslint.format.enable": true,
  "editor.formatOnSave": false,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },

  "[json]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  "[json5]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },

  "[markdown]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  "[yaml]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  // Render vertical rulers after a certain number of monospace characters.
  "editor.rulers": [80, 100], // Uses multiple values for multiple rulers.

  // Terminal
  //////////////////////////////////////////////////////////////////////////////

  "terminal.integrated.useWslProfiles": false,

  "terminal.integrated.profiles.linux": {
    "bash": null,
    "zsh": null,
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": null
  },

  "terminal.integrated.defaultProfile.linux": "fish",

  "terminal.integrated.splitCwd": "workspaceRoot",

  "terminal.integrated.shellIntegration.enabled": false,

  // Files
  //////////////////////////////////////////////////////////////////////////////

  "files.associations": {
    // Enable JSON5 syntax highlighting and auto-formatting for these files.
    // Until VS Code adds native JSON5 support, this needs
    // https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-json5
    ".devcontainer/*.json": "jsonc",
    ".vscode/*.json": "jsonc",
    "OWNERS": "json5",
    "tsconfig.*.json": "jsonc",
    "tsconfig.json": "jsonc",
    ".ecrc.json5": "json5",
    ".eslintrc.json": "jsonc",
    ".prettierrc.json": "json5",
    ".prettierrc.json5": "json5",
    ".deepsource.toml": "toml",
    ".renovaterc.json": "json5"
  },

  // Markdown
  //////////////////////////////////////////////////////////////////////////////

  "markdown.experimental.updateLinksOnFileMove.enabled": "prompt",
  "markdown.experimental.updateLinksOnFileMove.externalFileGlobs": "*",

  // JavaScript/TypeScript
  //////////////////////////////////////////////////////////////////////////////

  // Disable JS/TS validation. (These should be handled by ESLint.)
  "javascript.validate.enable": false,
  "typescript.validate.enable": false,
  "typescript.tsdk": "node_modules/typescript/lib",
  "javascript.preferences.autoImportFileExcludePatterns": [
    "**/node_modules/@types/node"
  ],
  "typescript.preferences.autoImportFileExcludePatterns": [
    "**/node_modules/@types/node"
  ],

  // Extensions
  //////////////////////////////////////////////////////////////////////////////

  // Better Comments
  /////////////////////////////////////////////

  // This setting will control whether multiline comments are styled using the
  // annotation tags. If false, multiline comments will be presented w/o decor.
  "better-comments.multilineComments": true,

  "better-comments.tags": [
    {
      "tag": "//",
      "strikethrough": false
    }
  ],

  // EditorConfig (https://editorconfig.org/)
  /////////////////////////////////////////////

  // The following settings should be inherited from the .editorconfig file and
  // need not be re-specified in this file: files.encoding, files.eol,
  // files.insertFinalNewline, and files.trimTrailingWhitespace.

  "editorconfig.generateAuto": false,

  // ESLint (ESLint is a separate extension)
  /////////////////////////////////////////////

  "eslint.validate": [
    "javascript",
    "json",
    "json5",
    "JSON with Comments",
    "markdown",
    "toml",
    "typescript",
    "yaml"
  ],

  // Whether the extension contributes a lint task to lint a whole workspace.
  "eslint.lintTask.enable": true,

  "eslint.workingDirectories": ["./"],

  "eslint.packageManager": "pnpm"
}
